trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  # Define variables for SonarQube
  SONARQUBE_PROJECT_KEY: 'Infra-Test_Infra-Test_925dc69a-6aa8-40cd-8ff4-4b5b537f42f9'  # Set this as needed
  SONARQUBE_URL: 'https://sonar-dev.supervity.ai'
  SONARQUBE_TOKEN: 'sqa_18ca7a4a75620b175378099dc7730a1eddf2a3b6'

steps:

# 1. Use the desired Python version
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- script: |
    echo "Listing files in the working directory:"
    ls -al
    echo "Listing files in the subdirectory (if applicable):"
    ls -al path/to/your/project  # Update this path if necessary
    
    echo "Installing Python dependencies..."
    python -m pip install --upgrade pip
    python -m pip install -r requirements.txt
    python setup.py build
  displayName: 'Install Dependencies and Build Project'
  workingDirectory: '.'

# 2. Install Python dependencies and build the project


# 3. Prepare SonarQube for analysis
- task: SonarQubePrepare@6
  inputs:
    SonarQube: 'SonarQube'  # This should match the name of the SonarQube service connection in Azure DevOps
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: $(SONARQUBE_PROJECT_KEY)
    cliSources: '.'
    extraProperties: |
      sonar.host.url=$(SONARQUBE_URL)
      sonar.login=$(SONARQUBE_TOKEN)
  displayName: 'Prepare SonarQube Analysis'

# 4. Run SonarQube analysis
- task: SonarQubeAnalyze@6
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'
  displayName: 'Run SonarQube Analysis'

# 5. Publish SonarQube results
- task: SonarQubePublish@6
  inputs:
    pollingTimeoutSec: '300'
  displayName: 'Publish SonarQube Quality Gate Result'
